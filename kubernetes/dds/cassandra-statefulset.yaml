apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  namespace: dena
spec:
  serviceName: cassandra
  replicas: 1
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      containers:
      - name: cassandra
        image: cassandra:3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        env:
        - name: CASSANDRA_SEEDS
          value: "cassandra-0.cassandra.dena.svc.cluster.local"
        - name: MAX_HEAP_SIZE
          value: "256M"
        - name: HEAP_NEWSIZE
          value: "100M"
        - name: CASSANDRA_CLUSTER_NAME
          value: "Cassandra"
        - name: CASSANDRA_DC
          value: "DC1"
        - name: CASSANDRA_RACK
          value: "Rack1"
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: "GossipingPropertyFileSnitch"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", 
                "echo \"Waiting for Cassandra to start...\"; 
                while ! echo \"DESCRIBE KEYSPACES;\" | cqlsh; do sleep 2; done; 
                echo \"Cassandra is ready! Initializing schema...\"; 
                cqlsh -e \"CREATE KEYSPACE IF NOT EXISTS admins WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1}; 
                USE admins; 
                CREATE TABLE IF NOT EXISTS users (user_id UUID PRIMARY KEY, username TEXT, password TEXT); 
                INSERT INTO users (user_id, username, password) VALUES (uuid(), 'admin', 'admin') IF NOT EXISTS; 
                CREATE TABLE IF NOT EXISTS roles (role_name TEXT PRIMARY KEY, permissions SET<TEXT>); 
                INSERT INTO roles (role_name, permissions) VALUES ('admin', {'CREATE', 'ALTER', 'DROP', 'SELECT', 'MODIFY'}) IF NOT EXISTS;\""]
        volumeMounts:
        - name: cassandra-data
          mountPath: "/var/lib/cassandra/data"
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
      namespace: "dena"
      annotations:
        volume.beta.kubernetes.io/storage-class: "" 
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: "1Gi"
